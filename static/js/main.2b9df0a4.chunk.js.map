{"version":3,"sources":["components/searchForm.js","components/modal/header.js","data/waterQuality.js","components/board/show_as_list.js","data/announceBoardPost.js","data/QandABoardPost.js","data/map_locationPosition.js","adaptor/adaptor.js","components/map/mapUtil.js","adaptor/sizeManager.js","components/map/show_as_map.js","data/applyMethodTxt.js","components/applyMeasurement/introduceMethod.js","adaptor/requestData.js","adaptor/url.js","components/board/board_preview.js","components/applyMeasurement/applyForm.js","data/board_preview.js","data/applyBoard.js","components/containers/mainContainer.js","components/board/writePostPage.js","components/board/postPage.js","components/board/board.js","components/modal/footer.js","components/containers/boardContainer.js","components/modal/sign_up.js","components/modal/login.js","components/containers/userContainer.js","routes.js","App.js","serviceWorker.js","redux/modules/dataController.js","redux/modules/index.js","index.js"],"names":["form","InputGroup","className","method","action","Card","variant","TextField","id","label","name","type","Button","Header","AppBar","position","color","elevation","sx","borderBottom","theme","palette","divider","Toolbar","flexWrap","Typography","noWrap","flexGrow","to","href","target","rel","my","mx","example","avatarUrl","company","isVerified","role","status","ShowList","useState","page","setPage","selected","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","Container","Stack","direction","alignItems","justifyContent","mb","gutterBottom","TableContainer","minWidth","Table","TableBody","slice","map","row","isItemSelected","indexOf","TableRow","hover","tabIndex","TableCell","component","scope","padding","spacing","align","style","height","colSpan","pt","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","console","log","onRowsPerPageChange","parseInt","value","announcePost","purpose","title","content","author","date","QandABoardPost","kakao","window","locationPosiotion","Name","XY_position","maps","LatLng","qulified","load_announce","announce","load_QandA","QandA","makeOverListener","marker","infowindow","open","Size","normal_size","expand_size","this","FULL_SIZE","NORMAL_SIZE","normal","expand","option","MapContainer","sizeOption","getSize","useEffect","container","document","getElementById","options","center","level","Map","location","loactionInfo","i","Position","Marker","iwContent","InfoWindow","removable","addListener","moveLatLon","setCenter","minHeight","display","CardContent","width","textContainer","first","second","third","forth","fifth","maxHeight","overflow","download","request","url","Data","requestTo","loadFrom","a","API_url","axios","post","then","response","catch","err","error","get","startPoint","substring","Board","tiers","navigate","useNavigate","request_data","Grid","tier","item","xs","sm","md","CardHeader","titleTypographyProps","backgroundColor","Box","description","line","onClick","requestData","size","OutlinedCard","React","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","onChange","newValue","renderInput","params","Input","placeholder","readOnly","CardActions","announce_post","question_post","questionPost","applyBoardList","MainContainer","maxWidth","exact","path","element","PostEditor","EditorState","createEmpty","editorState","setEditorState","wrapperClassName","editorClassName","toolbarClassName","toolbar","list","inDropdown","textAlign","link","history","localization","locale","onEditorStateChange","postPage","search","PREFIX","postObject","postBody","postTime","Footer","top","bottom","BoardContainer","current_PURPOSE","linkNextTo","workNextToDo","pathname","announcePostObject","QandAPostObject","Signup","inputName","setInputName","inputEmail","setInputEmail","inputPassword","setInputPassword","inputNumber","setInputNumber","inputLocation","setInputLocation","endIcon","userObjest","email","hash","dob","phone","address","Login","UserContainer","Router","useRoutes","children","replace","App","Boolean","hostname","match","LOAD","SAVE","DELETE","initialState","postTitle","postAuthor","amount","rootReducer","combineReducers","dataController","state","number","diff","store","createStore","getState","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b9df0a4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {Button, TextField} from '@mui/material';\nimport {FormControl, InputGroup, Card} from 'react-bootstrap'; \nfunction form() {\n\n  return (\n\n     <InputGroup className=\"mb-3\">\n      \t<form className=\"btn-default\"  method=\"post\" action=\"/user/friend\">\n\t\t\t<Card variant=\"outlined\">\n\t\t\t\t<TextField id=\"standard-basic\" label=\"검색\" variant=\"standard\" name=\"friend\"  type=\"text\" className=\"form-control\" />\n\t\t\t\t<Button variant=\"contained\" id=\"button-addon2\" type=\"submit\">조회</Button>\n\t\t\t</Card>\n\t\t</form>\n     </InputGroup>\n  );\n}\n\nexport default form;","import React from 'react';\nimport { AppBar, Toolbar, Typography, Button} from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n\n  return (\n\t<AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}` }}\n      >\n        <Toolbar sx={{ flexWrap: 'wrap' }}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1 }}>\n\t\t\t  <Link  to=\"/\"> \n\t\t\t\t  K-water\n\t\t\t  </Link>\n          </Typography>\n          <nav>\n\t\t\t<a\n\t\t\thref=\"https://www.miricanvas.com/v/1zrnpt\"\n\t\t\t  target=\"_blank\"\n\t\t\t  rel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t   <Button variant=\"text\">소개</Button>\n\t\t\t</a>\n            <Link  to=\"/apply\"> \n\t\t\t\t  <Button variant=\"text\">수질 검사 신청</Button>\n\t\t\t</Link>\n            <Link  to=\"/board/announce\"> \n\t\t\t\t  <Button variant=\"text\">공지사항</Button>\n\t\t\t</Link>\n\t\t\t<Link  to=\"/board/question\"> \n\t\t\t\t  <Button variant=\"text\">Q&A</Button>\n\t\t\t</Link>\n          </nav>\n\t\t\t<Link  to=\"/user/login\"> \n\t\t\t\t<Button variant=\"outlined\" sx={{ my: 1, mx: 1.5 }}>\n            \t\tLogin\n\t\t\t\t</Button>\n\t\t\t</Link>\n\t\t\t<Link  to=\"/user/signup\"> \n\t\t\t\t<Button variant=\"outlined\" sx={{ my: 1, mx: 1.5 }}>\n            \t\tsign up\n\t\t\t\t</Button>\n\t\t\t</Link>\n          \n        </Toolbar>\n      </AppBar>\n  );\n}\n\nexport default Header;","var example = [{\navatarUrl: \"/static/mock-images/avatars/avatar_7.jpg\",\ncompany: \"Williamson, D'Amore and Collier\",\nid: \"d890b376-c113-41c0-b813-5276c77afa10\",\nisVerified: '검출',\nname: \"강북\",\nrole: \"염소 이온\",\nstatus: \"active\"},\n{avatarUrl: \"/static/mock-images/avatars/avatar_7.jpg\",\ncompany: \"Williamson, D'Amore and Collier\",\nid: \"d890b376-41c0-b813-5276c77afa10\",\nisVerified: '검출',\nname: \"강남\",\nrole: \"염소 이온\",\nstatus: \"active\"},{avatarUrl: \"/static/mock-images/avatars/avatar_7.jpg\",\ncompany: \"Williamson, D'Amore and Collier\",\nid: \"c113-41c0-b813-5276c77afa10\",\nisVerified: '검출',\nname: \"여수\",\nrole: \"염소 이온\",\nstatus: \"active\"},{avatarUrl: \"/static/mock-images/avatars/avatar_7.jpg\",\ncompany: \"Williamson, D'Amore and Collier\",\nid: \"d890b376-c113-41c0-b813-52777a2310\",\nisVerified: '검출',\nname: \"강릉\",\nrole: \"염소 이온\",\nstatus: \"active\"},{avatarUrl: \"/static/mock-images/avatars/avatar_7.jpg\",\ncompany: \"Williamson, D'Amore and Collier\",\nid: \"d890b376-c113-41c0-b813-5276c11fa10\",\nisVerified: '검출',\nname: \"보령\",\nrole: \"염소 이온\",\nstatus: \"active\"},{avatarUrl: \"/static/mock-images/avatars/avatar_7.jpg\",\ncompany: \"Williamson, D'Amore and Collier\",\nid: \"d890b376-c113-41c0-b813-52713fa10\",\nisVerified: '검출',\nname: \"Andrew Bernhard\",\nrole: \"염소 이온\",\nstatus: \"active\"}]\n\nexport default example;","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link } from 'react-router-dom';\nimport example from '../../data/waterQuality';\n\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n\nfunction ShowList() {\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n\tconsole.log('newPage:')\n\tconsole.log(newPage)\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\tconst emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - example.length) : 0;\n\n  return (\n   \n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            K-water : 수질 조회 시스템\n          </Typography>\n        </Stack>\n\n        <Card>\n\n            <TableContainer sx={{ minWidth: 800}}>\n              <Table>\n\n                <TableBody>\n                {example\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => {\n                      const { id, name, role, status, company, avatarUrl, isVerified } = row;\n                      const isItemSelected = selected.indexOf(name) !== -1;\n\n                      return (\n                        <TableRow\n                          hover\n                          key={id}\n                          tabIndex={-1}\n                          selected={isItemSelected}\n                          aria-checked={isItemSelected}\n                        >\n\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            \n                              <Typography variant=\"subtitle2\" noWrap>\n                                {name}\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n                          <TableCell align=\"left\">{company}</TableCell>\n                          <TableCell align=\"left\">{role}</TableCell>\n                          <TableCell align=\"left\">{isVerified}</TableCell>\n\n                        </TableRow>\n                      );\n                    })}\n\t\t\t\t{emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                \n              </Table>\n            </TableContainer>\n\t\t\t\n\t\t\t<Stack\n              sx={{ pt: 4 }}\n              direction=\"row\"\n              spacing={2}\n              justifyContent=\"right\"\n            >\n\t\t\t\t<Link to=\"/map\"> \n\t\t\t\t  <Button >지도로 보기</Button>\n\t\t\t\t</Link>\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={example.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonPageChange={handleChangePage}\n\t\t\t\t\tonRowsPerPageChange={handleChangeRowsPerPage}\n\t\t\t\t/>\n            </Stack>\n\t\t\n        </Card>\n      </Container>\n  );\n}\n\n\nexport default ShowList;","const announcePost = [\n  {\tpurpose:'announce',\n    title: '안내사항입니다.',\n    content: \"본 서비스 사용방법입니다.\",\n\tauthor: '관리자',\n    date: \"2022-01-01\",\n\tid:0\n  },\n\t{\n\tpurpose:'announce',\n    title: '주요 기능',\n    content: \"주요 기능 안내입니다.\",\n\tauthor: '관리자',\n    date: \"2022-01-01\",\n\tid:1\n  },\n\t{\n\tpurpose:'announce',\n    title: '나의 신청 목록 확인 방법',\n    content: \"신청 목록 확인 방법 안내해드립니다.\",\n\tauthor: '관리자',\n    date: \"2022-01-01\",\n\tid:2\n  },\n];\n\nexport default announcePost;","const QandABoardPost = [\n  {\tpurpose:'question',\n    title: '본 서비스 사용방법 질문입니다.',\n    content: \"본 서비스 사용방법입니다.\",\n\tauthor: '관리자',\n    date: \"2022-01-01\",\n\tid:0\n  },\n\t{\n\tpurpose:'question',\n    title: '주요 기능 관련 질문',\n    content: \"주요 기능 안내입니다.\",\n\tauthor: '관리자',\n    date: \"2022-01-01\",\n\tid:1\n  },\n\t{\n\tpurpose:'question',\n    title: '나의 신청 목록 확인 방법 문의드립니다.',\n    content: \"신청 목록 확인 방법 안내해드립니다.\",\n\tauthor: '관리자',\n    date: \"2022-01-01\",\n\tid:2\n  },\n];\n\nexport default QandABoardPost;","\nconst { kakao } = window;\nconst locationPosiotion = [\n\t{\n\tName : 'example',\n\tXY_position : new kakao.maps.LatLng(33.450701, 126.570667),\n\tqulified:true\n\t},\n\t{\n\tName : 'example2',\n\tXY_position : new kakao.maps.LatLng(33.460701, 126.570667),\n\tqulified:true\n\t},\n\t{\n\tName : 'example3',\n\tXY_position : new kakao.maps.LatLng(33.470701, 126.570667),\n\tqulified:false\n\t},\n\t{\n\tName : 'example4',\n\tXY_position : new kakao.maps.LatLng(33.480701, 126.570667),\n\tqulified:false\n\t},\n];\n\nexport default locationPosiotion;","import water from '../data/waterquality_formatData';\nimport announce from '../data/announceBoardPost';\nimport QandA from '../data/QandABoardPost';\nimport loactionInfo from '../data/map_locationPosition';\n\nexport var load_announce = function(){\n\treturn announce;\n}\nexport var delete_saveData = function(){\n\t\n}\nexport var load_QandA = function(){\n\treturn QandA;\n}\nexport var delete_QandA = function(){\n\t\n}\nexport var load_waterquality = function(){\n\treturn water;\n}\nexport var delete_waterquality = function(){\n\t\n}\nexport var load_location = function(){\n\treturn loactionInfo;\n}\nexport var delete_location = function(){\n\t\n}\nexport var load_post = function(){\n\treturn loactionInfo;\n}\nexport var delete_post = function(){\n\t\n}","const { kakao } = window;\n// 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \nexport\tfunction makeOverListener(map, marker, infowindow) {\n\t\t\treturn function() {\n\t\t\t\tinfowindow.open(map, marker);\n\t\t\t};\n\t\t}\nexport function setCenter(map) {            \n\t\t\t// 이동할 위도 경도 위치를 생성합니다 \n\t\t\tvar moveLatLon = new kakao.maps.LatLng(33.452613, 126.570888);\n\n\t\t\t// 지도 중심을 이동 시킵니다\n\t\t\tmap.setCenter(moveLatLon);\n\t\t}","export class Size{\n\tconstructor(normal_size, expand_size){\n\t\tthis.FULL_SIZE = 1;\n\t\tthis.NORMAL_SIZE = 0;\n\t\tthis.normal = normal_size;\n\t\tthis.expand = expand_size;\n\t}\n\tgetSize(option){\n\t\treturn (option == this.FULL_SIZE) ? this.expand : this.normal;\n\t}\n}","import React, { useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { load_location } from '../../adaptor/adaptor';\nimport {makeOverListener, setCenter} from '../map/mapUtil';\nimport { Size } from '../../adaptor/sizeManager';\n\nconst { kakao } = window;\n\nconst MapContainer = ({sizeOption}) => {\n\nvar [HEIGHT, HEIGHT_expand] = ['450px', '700px'];\nvar size_manager = new Size([null,HEIGHT],[null,HEIGHT_expand])\nvar [width, height ]= size_manager.getSize(sizeOption);\n\t\n    useEffect(() => {\n\n        const container = document.getElementById('myMap');\n\t\tconst options = {\n\t\t\tcenter: new kakao.maps.LatLng(33.450701, 126.570667),\n\t\t\tlevel: 3\n\t\t};\n        const map = new kakao.maps.Map(container, options);\n\t\t\n\t\tvar location = load_location();\n\t\tfor(var i=0;i<location.length;i++){\n\t\t\t\n\t\t\tvar Position  = location[i].XY_position;\n\t\t\tvar marker = new kakao.maps.Marker({\n\t\t\t\tposition: Position,\n\t\t\t\tmap: map, \n\t\t\t});\n\t\t\t\n\t\t\tvar iwContent;\n\t\t\tif(location[i].qulified){\n\t\t\t\tvar iwContent = '<div width = \"25%\"; style=\"padding:5px;\">'\n\t\t\t\t\t\t\t+location[i].Name+location[i].qulified+'<img width = \"30px\"; src=\"/resource/image/check_icon.png\" />'\n\t\t\t\t\t\t\t+'</div>';\n\t\t\t}else{\n\t\t\t\tvar iwContent = '<div width = \"25%\"; style=\"padding:5px;\">'\n\t\t\t\t\t\t\t+location[i].Name+location[i].qulified\n\t\t\t\t\t\t\t+'</div>';\n\t\t\t}\n\t\t\t\n\t\t\tvar iwRemoveable = true; \n\n\t\t\t// 인포윈도우를 생성하고 지도에 표시합니다\n\t\t\tvar infowindow = new kakao.maps.InfoWindow({\n\t\t\t\tmap: map, // 인포윈도우가 표시될 지도\n\t\t\t\tposition : Position, \n\t\t\t\tcontent : iwContent,\n\t\t\t\tremovable : iwRemoveable\n\t\t\t});\n\t\t\tkakao.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow));\n\t\t}\n\n\t\tsetCenter(map);\n\t\t}, [height]);\n\t\n\n    return (\n\t\t<Card sx={{ minWidth: 400, minHeight:200, display: 'inline-block' }}>\n\t\t\t<CardContent>\n\t\t\t\t<div id='myMap' style={{\n\t\t\t\t\twidth: '1000px', \n\t\t\t\t\theight: height\n\t\t\t\t}}></div>\n\t\t\t</CardContent>\n\t\t\t<Link to=\"/map/expand\"> \n\t\t\t\t  <Button >지도 확대하기</Button>\n\t\t\t</Link>\n\t\t\t<Link to=\"/list\"> \n\t\t\t\t  <Button >리스트로 보기</Button>\n\t\t\t</Link>\n\t\t</Card>\n    );\n}\n\nexport default MapContainer;","const first = '시료 채수량 \\n'+\n\t\t\t'· 먹는물 : 4L, 무균채수병 1개, 1L 유리병 1개 \\n' +\n\t\t\t'· 생활(농업, 공업)용수 : 4L 무균채수병 1개 \\n' +\n\n\t\t\t'시료 채수 방법 \\n'+\n\t\t\t'· 호스를 제거하고 수도꼭지를 멸균처리(화염)합니다. \\n'+\n\t\t\t'· 수도꼭지를 틀어 5분 이상 흘려보냅니다. \\n'+\n\t\t\t'· 채수병은 마개가 오염되지 않도록 개봉합니다. \\n'+\n\t\t\t'· 채수병 내에 빈공간이 없도록 시료를 가득 채우고 입구가 오염되지 않도록 봉합니다. \\n' +\n\t\t\t'· 즉시 검사기관에 의뢰합니다. \\n';\n\nconst second = '시료를 지참하여 검사소를 직접 방문합니다. \\n' +\n'정기검사 및 인·허가인 경우 담당공무원 입회하에 채수하고 사료채취 기록부도 함께 제출하여야 합니다 \\n.'+\n'수질검사 신청서를 작성합니다. \\n'+\n'수질검사 접수증과 세금계산서를 수령합니다.';\n\nconst third = '검사수수료 \\n'+\n\t\t\t'먹는물(수돗물, 59항목) : 328,800원(분원성대장균군, 우라늄 제외시) \\n'+\n\t\t\t'먹는물(지하수, 46항목) : 270,100원(분원성대장균군, 우라늄 제외시) \\n'+\n\t\t\t'생활용수(지하수) : 137,800원 \\n'+\n\t\t\t'농업용수(지하수) : 109,400원 \\n';\n\nconst forth = '납부방법 : 현금 또는 신용카드 \\n'+\n\t\t\t\t\t\t '계좌이체 번호 \\n'+\n\t\t\t\t\t\t '- 물환경안전처 : 국민은행 462890-14-712323 (예금주: 한국수자원공사) \\n'+\n\t\t\t\t\t\t '- 수도권수질검사소 : 국민은행 462890-14-704663 (예금주: 한국수자원공사) \\n'+\n\t\t\t\t\t\t '- 충청권수질검사소 : 국민은행 462890-14-671648 (예금주: 한국수자원공사) \\n'+\n\t\t\t\t\t\t '- 전북권수질검사소 : 국민은행 462890-14-712378 (예금주: 한국수자원공사) \\n'+\n\t\t\t\t\t\t '- 경북권수질검사소 : 국민은행 462890-14-712352 (예금주: 한국수자원공사) \\n'+\n\t\t\t\t\t\t '- 경남권수질검사소 : 국민은행 462890-14-712365 (예금주: 한국수자원공사) \\n'+\n\t\t\t\t\t\t '- 전남권수질검사소 : 국민은행 462890-14-713870 (예금주: 한국수자원공사) \\n';\nconst fifth = '처리기간 \\n'+\n\t\t\t'접수일로부터 20일 이내(주말(토, 일), 공휴일 제외) \\n'+\n\t\t\t'수령방법 \\n'+\n\t\t\t'등기우편, FAX, 직접수령 가능 \\n';\nvar textContainer = {first:first, second: second, third: third, forth: forth, fifth: fifth};\nexport default textContainer;","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../componentStyle/textStyle.css\"\nimport textContainer from '../../data/applyMethodTxt'\n\nimport {\n  Card,\n  Stack,\n  Table,\n  Button,\n  Checkbox,\n  TableBody,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n\nfunction ShowList() {\n\n  return (\n   \n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            K-water :수질 검사 절차 안내\n          </Typography>\n        </Stack>\n\n        <Card>\n\n            <TableContainer sx={{ minWidth: 800}} style={{maxHeight: 400, overflow: 'auto'}}>\n              <Table>\n\n                <TableBody   >\n\t\t\t\t\t\n\t\t\t\t\t<Typography variant=\"body2\" className=\"display-enter\" align = 'left'> \n\t\t\t\t\t\t{textContainer.first}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" className=\"display-enter\" align = 'left'>\n\t\t\t\t\t\t{textContainer.second}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" className=\"display-enter\" align = 'left'>\n\t\t\t\t\t\t{textContainer.third}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" className=\"display-enter\" align = 'left'>\n\t\t\t\t\t\t{textContainer.forth}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" className=\"display-enter\" align = 'left'>\n\t\t\t\t\t\t{textContainer.fifth}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t수질검사 결과에 대한 문의 및 이의신청은 K-water 홈페이지에서 하실 수 있습니다.\n\t\t\t\t\t\thttp://www.kwater.or.kr - 국민소통 - 고객광장 - 민원(질의)신청\n\t\t\t\t\t</Typography>\n\t\t\t\t\t\n\t\t\t\t\t\n                </TableBody>\n                \n              </Table>\n\t\t\t\t<Link to=\"/write\"> \n\t\t\t\t\t  <Button >신청서 간편 작성</Button>\n\t\t\t\t</Link>\n\t\t\t\t<Button ><a href=\"/resource/file/water_proc02/붙임1. 수질검사신청서.hwp\" download>신청서 직접 작성</a></Button>\n            </TableContainer>\n\t\t\t\n        </Card>\n      </Container>\n  );\n}\n\n\nexport default ShowList;","import { Link, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { load_announce } from './adaptor';\nimport axios from 'axios';\nimport {api_url, local_url} from'./url';\nexport class request{\n\t\n\tconstructor(url){\n\t\tthis.url = url;\n\t}\n\t\n\trequestData(Data, url){\n\t\tif(url)this.url = url;\n\t\ttry{\n\t\t\tthis.requestTo(Data);\n\t\t}catch{\n\t\t\tthis.loadFrom();\n\t\t}\n\t}\n\t\n\tasync requestTo(Data){\n\t\tvar API_url = api_url+this.url;\n\t\tif(Data){\n\t\t\tawait axios\n\t\t\t.post(API_url, Data)\n\t\t\t.then(function(response) {\n\t\t\t\tconsole.log(response);\n\t\t\t\treturn response;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t}else{\n\t\t\tawait axios\n\t\t\t.get(API_url)\n\t\t\t.then(function(response) {\n\t\t\t\tconsole.log(response);\n\t\t\t\treturn response;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tloadFrom(){\n\t\tvar startPoint = this.url.indexOf('id=')+3;\n\t\tvar id_value = this.url.substring(startPoint);\n\t\t\n\t}\n}","export const api_url = 'https://api.skew.ch';\nexport const local_url = 'https://watermera-backend.run.goorm.io';","import React, { useCallback, useState } from 'react';\nimport { Link, useParams, useLocation, useNavigate } from \"react-router-dom\";\n\nimport { Box, Grid, Container, Typography, Divider, Card, CardContent, CardHeader, CardActions, Button,\n\t   AppBar, Toolbar} from '@mui/material';\nimport { request } from '../../adaptor/requestData';\nfunction Board({tiers}) {\n\tconst navigate = useNavigate();\t\n\t\n\tvar width = tiers.length == 1 ? 12 : 6;\n\n\tvar request_data = new request(null);\n\tconst showPost = (url) =>{\n\trequest_data.requestData(null, url);\n\tnavigate(url);\n\t}\n  return (\n\t  \n\t<Container component=\"main\">\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          {tiers.map((tier) => (\n            <Grid\n              item\n              key={tier.title}\n              xs={12}\n              sm={width}\n              md={width}\n            >\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  titleTypographyProps={{ align: 'center', color:\"text.primary\"}}\n                  sx={{\n                    backgroundColor: '#bdbdbd'\n                  }}\n                />\n                <CardContent>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'baseline',\n                      mb: 2,\n                    }}\n                  >\n                  \n                  </Box>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography\n                        component=\"li\"\n                        variant=\"subtitle1\"\n                        align=\"center\"\n                        key={line}\n\t\t\t\t\t\tonClick={() => showPost('/board/showPost?id='+tier.id+'&purpose='+tier.purpose)}\n                      >\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n\t\t\t\t\n                </CardContent>\n\t\t\t\t<Link to={tier.url}> \n\t\t\t\t  <Button size=\"small\">더보기</Button>\n\t\t\t\t</Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n  );\n}\n\nexport default Board;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Stack from '@mui/material/Stack';\nimport { Link } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\n\n<TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\nexport default function OutlinedCard() {\n  const [value, setValue] = React.useState(null);\n  return (\n\t\n    <Box sx={{ minWidth: 800}}>\n\t\t<Card sx={{ minWidth: 400, display: 'inline-block' }}>\n\t\t  <CardContent>\n\t\t\t<Stack direction=\"row\" spacing={2}>\n\t\t\t\t<TextField id=\"standard-basic\" label=\"이름\" variant=\"standard\" sx = {{width : 200}}/>\n\t\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}  sx = {{width : 200}}>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tlabel=\"생년월일\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t  setValue(newValue);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t/>\n\t\t\t\t</LocalizationProvider>\n\t\t\t</Stack>\n\n\t\t\t<Stack direction=\"row\" spacing={1}>\n\t\t\t\t<Input placeholder=\"주소\" readOnly sx = {{width : 300}}/>\n\t\t\t\t<Link to=\"/write/search\"> \n\t\t\t\t\t<Button >주소 검색</Button>\n\t\t\t\t</Link>\n\t\t\t</Stack>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t <Input placeholder=\"전화번호(000-0000-0000)\" sx = {{width : 300}} />\n\t\t\t</Typography>\n\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n\t\t\t  <Input placeholder=\"검사목적\"  sx = {{width : 300}}/>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t <Input placeholder=\"검사의뢰 항목\"  sx = {{width : 300}}/>\n\t\t\t</Typography>\n\t\t\t  \n\t\t  </CardContent>\n\t\t  <CardActions>\n\t\t\t<a\n\t\t\thref=\"https://www.kwater.or.kr/ipinPage.do?s_mid=702\"\n\t\t\t  target=\"_blank\"\n\t\t\t  rel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t  문의 및 이의신청\n\t\t\t</a>\n\t\t  </CardActions>\n\t\t</Card>\n    </Box>\n  );\n}","import announcePost from './announceBoardPost';\nimport questionPost from './QandABoardPost';\nvar announce_post = announcePost.map((post)=>post.title);\nvar question_post = questionPost.map((post)=>post.title);\nconst tiers = [\n  {\n    title: '공지사항',\n\turl:'/board/announce',\n    description: announce_post.slice(0,4),\n\tpurpose:'announce'\n  },\n  {\n    title: 'Q & A',\n\turl:'/board/question',\n    description: question_post.slice(0,4),\n\tpurpose:'question'\n  }\n];\n\nexport default tiers;","const applyBoardList = [\n  {\n    title: '나의 신청 목록',\n\turl:'/board/myApply',\n    description: [\n      '2021-01-11 신청자: 홍길동',\n      '2021-05-11 신청자: 홍길동',\n      '2021-09-11 신청자: 홍길동',\n      '2022-01-20 신청자: 홍길동',\n    ],\n  }\n];\n\nexport default applyBoardList;","import React, { useCallback } from 'react';\nimport { Router, Route, Routes } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CustomedHeader from '../modal/header';\nimport Show_as_List from '../board/show_as_list';\nimport Show_as_Map from '../map/show_as_map';\nimport Search from '../searchForm';\nimport Show_Apply_Method from '../applyMeasurement/introduceMethod';\nimport Board_preview from '../board/board_preview';\nimport Write_apply_paper from '../applyMeasurement/applyForm';\nimport { Box, Grid, Container, Typography, Divider, Card, CardContent, CardHeader, CardActions, Button,\n\t   AppBar, Toolbar} from '@mui/material';\nimport { gray } from '@mui/material/colors';\nimport tiers from '../../data/board_preview';\nimport applyBoardList from '../../data/applyBoard';\n\nfunction MainContainer() {\nvar FULL_SIZE = 1;\nvar MORMAL_SIZE = 0;\n  return (\n\t  <Container maxWidth=\"xl\">\n\t\t<CustomedHeader />\n\t\t  \n\t\t<br></br>\n\t\t<br></br>\n\t\t  \n\t\t<Routes >\n        \t<Route exact path=\"/\" element={<Show_as_List />} />\n\t\t\t<Route exact path=\"/list\" element={<Show_as_List />} />\n\t\t\t<Route path=\"/map\"  element={<Show_as_Map size={MORMAL_SIZE}/>} />\n\t\t\t<Route path=\"/map/expand\"  element={<Show_as_Map sizeOption={FULL_SIZE}/>} />\n\t\t\t<Route exact path=\"/apply\" element={<Show_Apply_Method />} />\n\t\t\t<Route  path=\"/write/*\" element={<Write_apply_paper />} />\n        </Routes >\n\t\t  \n\t\t<br></br>\n\t\t\n\t\t<Routes >\n\t\t\t<Route exact path=\"/\" element={<Board_preview tiers={tiers}/>} />\n        \t<Route exact path=\"/list\" element={<Board_preview tiers={tiers}/>} />\n\t\t\t<Route exact path=\"/map\" element={<Board_preview  tiers={tiers}/>} />\n\t\t\t<Route exact path=\"/apply\" element={<Board_preview tiers={applyBoardList}/>} />\n\t\t\t<Route  path=\"/write/search\" element={<Search />} />\n        </Routes >\n\t\t\n      </Container>\n  );\n}\n\nexport default MainContainer;","import React, { useState } from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { EditorState } from 'draft-js';\nimport {  Typography } from '@mui/material';\n\nconst PostEditor = () => {\n  // useState로 상태관리하기 초기값은 EditorState.createEmpty()\n  // EditorState의 비어있는 ContentState 기본 구성으로 새 개체를 반환 => 이렇게 안하면 상태 값을 나중에 변경할 수 없음.\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = (editorState) => {\n    // editorState에 값 설정\n    setEditorState(editorState);\n  };\n\n  return (\n\t  <Card sx={{ minWidth: 400, minHeight:500, display: 'inline-block' }}>\n\n\t\t  <Editor\n\t\t\t// 에디터와 툴바 모두에 적용되는 클래스\n\t\t\twrapperClassName=\"wrapper-class\"\n\t\t\t// 에디터 주변에 적용된 클래스\n\t\t\teditorClassName=\"editor\"\n\t\t\t// 툴바 주위에 적용된 클래스\n\t\t\ttoolbarClassName=\"toolbar-class\"\n\t\t\t// 툴바 설정\n\t\t\ttoolbar={{\n\t\t\t  // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n\t\t\t  list: { inDropdown: true },\n\t\t\t  textAlign: { inDropdown: true },\n\t\t\t  link: { inDropdown: true },\n\t\t\t  history: { inDropdown: false },\n\t\t\t}} \n\t\t\tplaceholder=\"내용을 작성해주세요.\"\n\t\t\t// 한국어 설정\n\t\t\tlocalization={{\n\t\t\t  locale: 'ko',\n\t\t\t}}\n\t\t\t// 초기값 설정\n\t\t\teditorState={editorState}\n\t\t\t// 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n\t\t\tonEditorStateChange={onEditorStateChange}\n\t\t  />\n\t</Card>\n  );\n};\n\nexport default PostEditor;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Stack from '@mui/material/Stack';\nimport { Link } from 'react-router-dom';\nimport {load_announce, load_QandA} from '../../adaptor/adaptor';\nimport PostEditor from './writePostPage';\nexport default function postPage() {\n\t\nvar search = window.location.search;\nvar PREFIX = search.indexOf('purpose=');\nvar PURPOSE =  search.substring(PREFIX + 'purpose='.length); \n\nvar post;\nif(PURPOSE == 'announce'){\n\tpost = load_announce();\n}else if('question'){\n\tpost = load_QandA();\n}\n\n  return (\n\t\n    <Box sx={{ minWidth: 800}}>\n\t\t<Card sx={{ minWidth: 800, display: 'inline-block' }}>\n\t\t  <CardContent>\n\t\t\t\n\t\t\t<Typography variant=\"h4\" className=\"display-enter\" align = 'left'> \n\t\t\t\t{post[0].title}\n\t\t\t\t<br />\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"body2\" className=\"display-enter\" align = 'left'> \n\t\t\t\t{post[0].content}\n\t\t\t\t<br />\n\t\t\t</Typography>\n\t\t\t\t\t\t  \n\t\t  </CardContent>\n\t\t  <CardActions>\n\t\t\t<PostEditor />\n\t\t  </CardActions>\n\t\t</Card>\n    </Box>\n  );\n}","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\nimport { request } from '../../adaptor/requestData';\nfunction ShowList({postObject}) {\n\tconst [page, setPage] = useState(0);\n\tconst [order, setOrder] = useState('asc');\n\tconst [selected, setSelected] = useState([]);\n\tconst [orderBy, setOrderBy] = useState('name');\n\tconst [filterName, setFilterName] = useState('');\n\tconst [rowsPerPage, setRowsPerPage] = useState(5);\n\tconst navigate = useNavigate();\n\tvar request_data = new request(null);\n\t\n  const showPost = (url) =>{\n\trequest_data.requestData(null, url);\n\tnavigate(url);\n  }\n  \n  const handleChangePage = (event, newPage) => {\n\tconsole.log('newPage:')\n\tconsole.log(newPage)\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\tvar example = postObject.content();\n\tconst emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - example.length) : 0;\n\n  return (\n   \n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            {postObject.title}\n          </Typography>\n        </Stack>\n\n        <Card>\n\n            <TableContainer sx={{ minWidth: 800}}>\n              <Table>\n\n                <TableBody>\n                {example\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => {\n                      const { id, title, content, author, date, postBody, postTime } = row;\n                      const isItemSelected = selected.indexOf(title) !== -1;\n\n                      return (\n                        <TableRow\n                          hover\n                          key={id}\n                          tabIndex={-1}\n                          selected={isItemSelected}\n                          aria-checked={isItemSelected}\n\t\t\t\t\t\t  onClick={() => showPost('/board/showPost?id='+id+'&purpose='+postObject.purpose)}\n                        >\n\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\" >\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            \n                              <Typography variant=\"subtitle2\" noWrap>\n                                {title}\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n                          <TableCell align=\"left\">{content}</TableCell>\n                          <TableCell align=\"left\">{author}</TableCell>\n                          <TableCell align=\"left\">{date}</TableCell>\n\n                        </TableRow>\n                      );\n                    })}\n\t\t\t\t{emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                \n              </Table>\n            </TableContainer>\n\t\t\t\n\t\t\t<Stack\n              sx={{ pt: 4 }}\n              direction=\"row\"\n              spacing={2}\n              justifyContent=\"right\"\n            >\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={example.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonPageChange={handleChangePage}\n\t\t\t\t\tonRowsPerPageChange={handleChangeRowsPerPage}\n\t\t\t\t/>\n            </Stack>\n\t\t\n        </Card>\n      </Container>\n  );\n}\n\n\nexport default ShowList;","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Paper from '@mui/material/Paper';\nimport Fab from '@mui/material/Fab';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Avatar from '@mui/material/Avatar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AddIcon from '@mui/icons-material/Add';\nimport Search from '@mui/icons-material/Search';\nimport { styled, alpha } from '@mui/material/styles';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n\n  return (\n\t <Box position=\"fixed\" backgroundColor = 'gray' width = '90%' sx={{ top: 'auto', bottom: 0 }}>\n          <Box sx={{ flexGrow: 1 }} />\n\t\t\t<p> Designed By Watermera 2022</p>\n\t\t\t<p> 타 문의사항이 이곳으로 보내주세요.</p>\n      </Box>\n  );\n}\n\nexport default Footer;","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Router, Route, Routes } from \"react-router-dom\";\nimport { Box, Grid, Container, Typography, Divider, Card, CardContent, CardHeader, CardActions, Button,\n\t   AppBar, Toolbar} from '@mui/material';\nimport PostPage from '../board/postPage';\nimport PostEditor from '../board/writePostPage';\nimport Board from '../board/board';\nimport Header from '../modal/header';\nimport Footer from '../modal/footer';\nimport applyBoardList from '../../data/applyBoard';\nimport {load_announce, load_QandA} from '../../adaptor/adaptor';\n\nfunction BoardContainer() {\n\n\nvar linkNextTo = \"/board/write\";\nvar workNextToDo = '글 작성';\nvar PREFIX, current_PURPOSE;\nif(window.location.pathname.indexOf('write')>0){\n\tlinkNextTo = \"/board/show\";\n\tworkNextToDo = \"글 저장\";\n}else{\n\tPREFIX = window.location.pathname.indexOf('board');\n\tcurrent_PURPOSE =  window.location.pathname.substring(PREFIX + 'board'.length); \n\tlinkNextTo = linkNextTo + current_PURPOSE;\n}\n\t\nvar announcePostObject = {title:'공지사항', content:load_announce, purpose:current_PURPOSE.substring(1)};\nvar QandAPostObject = {title:'Q&A', content:load_QandA, purpose:current_PURPOSE.substring(1)}\n\nconsole.log(linkNextTo);\n  return (\n\t  <Container maxWidth=\"xl\">\n\t\t<Header />\n\t\t<br></br>\n\t\t<br></br>\n\t\t\n\t\t<Routes >\n\t\t\t<Route exact path=\"/announce\" element={<Board postObject = {announcePostObject}  />} />\n\t\t\t<Route exact path=\"/question\" element={<Board postObject = {QandAPostObject}/>}  />\n\t\t\t<Route exact path=\"/myApplyList\" element={<Board postObject = {QandAPostObject}  />} />\n\t\t\t<Route path=\"/write/*\" element={<PostEditor />} />\n\t\t\t<Route path=\"/showPost\" element={<PostPage />} />\n        </Routes >\n\t\t  \n\t\t<br />\n\t\t  \n\t\t<Link to=\"../\"> \n\t\t\t<Button >홈화면</Button>\n\t\t</Link>\n\t\t<Link to={linkNextTo}> \n\t\t\t<Button >{workNextToDo}</Button>\n\t\t</Link>\n\t\t  \n\t\t<br></br>\n\t\t<Footer />\n      </Container>\n  );\n}\n\nexport default BoardContainer;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Stack from '@mui/material/Stack';\nimport { Link } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport {request} from '../../adaptor/requestData';\nimport { useState } from 'react';\nimport SendIcon from '@mui/icons-material/Send';\n<TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\nexport default function Signup() {\n\tvar [value, setValue] = React.useState(null);\n\tvar [inputName, setInputName]   = useState(\"-\")\n\tvar [inputEmail, setInputEmail] = useState(\"-\")\n\tvar [inputPassword, setInputPassword] = useState(\"-\")\n\tvar [inputNumber, setInputNumber]   = useState(\"-\")\n\tvar [inputLocation, setInputLocation]   = useState(\"천안 서북구 성거읍\");\n\t\n\tvar request_data = new request(null);\n\tvar send = ()=>{\n\t\tlet userObjest = {\n\t\t\temail:inputEmail,\n\t\t\thash:inputPassword,\n\t\t\tname:inputName,\n\t\t\tdob:value,\n\t\t\tphone:inputNumber,\n\t\t\taddress:inputLocation\n\t\t}\n\t\trequest_data.requestData(userObjest,'/register');\n\t}\n  return (\n\t\n    <Box sx={{ minWidth: 800}}>\n\t\t<Card sx={{ minWidth: 400, display: 'inline-block' }}>\n\t\t  <CardContent>\n\t\t\t<Stack direction=\"row\" spacing={2}>\n\t\t\t\t<TextField id=\"name\"  label=\"이름\" variant=\"standard\"  sx = {{width : 200}}  onChange={(event) => setInputName(event.target.value)}/>\n\t\t\t\t<TextField id='email' label=\"이메일\" variant=\"standard\" sx = {{width : 200}}  onChange={(event) => setInputEmail(event.target.value)}/>\n\t\t\t\t<TextField id='email' label=\"비밀번호\" variant=\"standard\" sx = {{width : 200}}  onChange={(event) => setInputPassword(event.target.value)}/>\n\t\t\t\t<TextField id='email' label=\"비밀번호 확인\" variant=\"standard\" sx = {{width : 200}}  />\n\t\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}  sx = {{width : 200}}>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tlabel=\"생년월일\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t  setValue(newValue);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} id='birth_day'/>}\n\t\t\t\t\t/>\n\t\t\t\t</LocalizationProvider>\n\t\t\t</Stack>\n\n\t\t\t<Stack direction=\"row\" spacing={1}>\n\t\t\t\t<Input placeholder=\"주소\" readOnly sx = {{width : 300}} onChange={(event) => setInputLocation(event.target.value)}/>\n\t\t\t\t<Link to=\"/write/search\"> \n\t\t\t\t\t<Button >주소 검색</Button>\n\t\t\t\t</Link>\n\t\t\t</Stack>\n\t\t\t\n\t\t\t <Input id='phoneNumber' placeholder=\"전화번호(000-0000-0000)\" sx = {{width : 300}} onChange={(event) => setInputNumber(event.target.value)}/>\n\t\t\t\n\t\t\t  \n\t\t  </CardContent>\n\t\t  <CardActions>\n\t\t\t\t<Button endIcon={<SendIcon />} onClick={send}>완료</Button>\n\t\t  </CardActions>\n\t\t</Card>\n    </Box>\n  );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Stack from '@mui/material/Stack';\nimport { Link } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\n\n<TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\nexport default function Login() {\n  const [value, setValue] = React.useState(null);\n  return (\n\t\n    <Box sx={{ minWidth: 800}}>\n\t\t<Card sx={{ minWidth: 400, display: 'inline-block' }}>\n\t\t  <CardContent>\n\t\t\t<Stack direction=\"row\" spacing={2}>\n\t\t\t\t<TextField id=\"standard-basic\" label=\"이름\" variant=\"standard\" sx = {{width : 200}}/>\n\t\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}  sx = {{width : 200}}>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tlabel=\"생년월일\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t  setValue(newValue);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t/>\n\t\t\t\t</LocalizationProvider>\n\t\t\t</Stack>\n\n\t\t\t<Stack direction=\"row\" spacing={1}>\n\t\t\t\t<Input placeholder=\"주소\" readOnly sx = {{width : 300}}/>\n\t\t\t\t<Link to=\"/write/search\"> \n\t\t\t\t\t<Button >주소 검색</Button>\n\t\t\t\t</Link>\n\t\t\t</Stack>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t <Input placeholder=\"전화번호(000-0000-0000)\" sx = {{width : 300}} />\n\t\t\t</Typography>\n\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n\t\t\t  <Input placeholder=\"검사목적\"  sx = {{width : 300}}/>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body2\">\n\t\t\t <Input placeholder=\"검사의뢰 항목\"  sx = {{width : 300}}/>\n\t\t\t</Typography>\n\t\t\t  \n\t\t  </CardContent>\n\t\t  <CardActions>\n\t\t\t<a\n\t\t\thref=\"https://www.kwater.or.kr/ipinPage.do?s_mid=702\"\n\t\t\t  target=\"_blank\"\n\t\t\t  rel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t  문의 및 이의신청\n\t\t\t</a>\n\t\t  </CardActions>\n\t\t</Card>\n    </Box>\n  );\n}","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Router, Route, Routes } from \"react-router-dom\";\nimport { Box, Grid, Container, Typography, Divider, Card, CardContent, CardHeader, CardActions, Button,\n\t   AppBar, Toolbar} from '@mui/material';\nimport Header from '../modal/header';\nimport Signup from '../modal/sign_up';\nimport Login from '../modal/login';\n\n\nfunction UserContainer() {\n\n  return (\n\t  <Container maxWidth=\"xl\">\n\t\t<Header />\n\t\t<br></br>\n\t\t<br></br>\n\t\t\n\t\t<Routes >\n\t\t\t<Route exact path=\"/login\" element={<Login />} />\n\t\t\t<Route exact path=\"/signup\" element={<Signup />} />\n        </Routes >\n\t\t  \n\t\t  \n\t\t<br></br>\n      </Container>\n  );\n}\n\nexport default UserContainer;","import { Navigate, useRoutes } from 'react-router-dom';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport Test from './components/searchForm';\nimport MainContainer from './components/containers/mainContainer';\nimport BoardContainer from './components/containers/boardContainer';\nimport UserContainer from './components/containers/userContainer';\n// ----------------------------------------------------------------------\n\nexport default function Router() {\n\treturn useRoutes([\n\t\t{\n\t\t\tpath: '/*',\n\t\t\telement: \n\t\t\t\t\t<MainContainer />\n\t\t\t\t,\n\t\t\tchildren: [\n\t\t\t\t{ path: 'map' },\n\t\t\t\t{ path: 'list'},\n\t\t\t\t{ path: 'apply'},\n\t\t\t\t{ path: 'write/search'},\n\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tpath: '/board/*',\n\t\t\telement: \n\t\t\t\t\t<BoardContainer />\n\t\t\t\t,\n\t\t},\n\t\t{\n\t\t\tpath: '/user/*',\n\t\t\telement: \n\t\t\t\t\t<UserContainer />\n\t\t\t\t,\n\t\t},\n\t\t{ path: '*', element: <Navigate to=\"/404\" replace /> },\n\t]);\n}","import React, { Component } from 'react';\nimport { Route} from \"react-router-dom\";\nimport './App.css';\n// routes\nimport Router from './routes';\nimport MainContainer from './components/containers/mainContainer';\nimport Header from './components/modal/header';\nexport default function App() {\n\treturn (\n\t\t <div className=\"App\">\n\t\t\t<Router path=\"/\">\n                <MainContainer />\n            </Router>\n\t\t</div>\n\t);\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","/* 액션 타입 만들기 */\n// Ducks 패턴을 따를땐 액션의 이름에 접두사를 넣어주세요.\n// 이렇게 하면 다른 모듈과 액션 이름이 중복되는 것을 방지 할 수 있습니다.\nconst LOAD = 'dataController/LOAD';\nconst SAVE = 'dataController/SAVE';\nconst DELETE = 'dataController/DELETE';\n\n/* 액션 생성함수 만들기 */\n// 액션 생성함수를 만들고 export 키워드를 사용해서 내보내주세요.\nexport const saveData = post => ({ type: SAVE, post });\nexport const loadData = () => ({ type: LOAD });\nexport const deleteData = () => ({ type: DELETE });\n\n/* 초기 상태 선언 */\nconst initialState = {\n  post: {title: '수질 조회', content:[{postTitle:'빈 제목', postBody:'빈 내용', postTime: '비어있는 시간', postAuthor:'작성자 없음'}]},\n  amount: 0\n};\n\n/* 리듀서 선언 */\n// 리듀서는 export default 로 내보내주세요.\nexport default function counter(state = initialState, action) {\n\tconsole.log(state)\n  switch (action.type) {\n    case LOAD:\n      return state;\n\t\t  \n    case SAVE:\n\t\t  console.log(state)\n      return {\n        ...state,\n        post: state.post\n      };\n\t\t  \n    case DELETE:\n      return {\n        ...state,\n        number: state.number - state.diff\n      };\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport dataController from './dataController';\n\nconst rootReducer = combineReducers({\n  dataController\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { createStore } from 'redux';\nimport rootReducer from './redux/modules';\n\nimport { Provider } from \"react-redux\";\nconst store = createStore(rootReducer);\nconsole.log(store.getState());\n\nReactDOM.render(\n  <HelmetProvider>\n\t <Provider store={store}>\n\t\t<BrowserRouter>\n\t\t  <App />\n\t\t</BrowserRouter>\n\t </Provider>,\n  </HelmetProvider>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}